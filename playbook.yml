---
- name: Nettoyage et pr√©paration d'un n≈ìud master Kubernetes (local VM)
  hosts: localhost
  become: yes
  gather_facts: no 
  tasks:

    - name: "Arr√™ter les services Kubernetes"
      systemd:
        name: "{{ item }}"
        state: stopped
      loop:
        - kubelet
        - containerd
      ignore_errors: yes

    - name: " R√©initialiser kubeadm"
      shell: kubeadm reset -f
      ignore_errors: yes

    - name: " Supprimer les paquets Kubernetes"
      apt:
        name:
          - kubeadm
          - kubectl
          - kubelet
          - kubernetes-cni
          - kube*
        state: absent
        purge: yes
        autoremove: yes
        force: yes
      ignore_errors: yes

    - name: " Supprimer les dossiers Kubernetes"
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /opt/cni/bin
        - /etc/kubernetes
        - /root/.kube
        - /var/lib/kubelet
        - /var/lib/etcd
        - /etc/cni
        - /var/lib/cni
        - /run/flannel
        - /etc/flannel
        - /var/run/kubernetes
        - /run/kubeadm
      ignore_errors: yes

    - name: "üßπ Nettoyer iptables"
      shell: |
        iptables -F
        iptables -X
        iptables -t nat -F
        iptables -t nat -X
        iptables -t mangle -F
        iptables -t mangle -X
        iptables -P INPUT ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -P OUTPUT ACCEPT
      ignore_errors: yes

    - name: "üßπ Supprimer interfaces r√©seau CNI"
      shell: |
        ip link delete cni0 2>/dev/null || true
        ip link delete flannel.1 2>/dev/null || true
        ip link delete docker0 2>/dev/null || true
      ignore_errors: yes

    - name: Nettoyer le cache APT
      apt:
        autoclean: yes
        autoremove: yes

    - name: Mise √† jour du syst√®me
      apt:
        update_cache: yes
        upgrade: dist

    - name: Installer Docker
      apt:
        name: docker.io
        state: present

    - name: Installer d√©pendances de Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present

    - name: D√©sactiver le swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Charger modules kernel
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Appliquer les param√®tres sysctl
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
        sysctl_file: /etc/sysctl.d/k8s.conf
      loop:
        - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { key: 'net.ipv4.ip_forward', value: '1' }

    - name: Installer containerd
      apt:
        name: containerd
        state: present

    - name: Cr√©er le r√©pertoire containerd
      file:
        path: /etc/containerd
        state: directory

    - name: G√©n√©rer la configuration containerd
      shell: |
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

    - name: Red√©marrer containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Ajouter la cl√© GPG Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Ajouter le d√©p√¥t Kubernetes
      apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Installer Kubernetes (version 1.26.0)
      apt:
        name:
          - kubelet=1.26.0-00
          - kubeadm=1.26.0-00
          - kubectl=1.26.0-00
        state: present
        update_cache: yes

    - name: Bloquer les mises √† jour automatiques
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
